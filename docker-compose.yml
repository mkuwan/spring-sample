version: '3.9'

services:
  mongo:
    container_name: mongo_db
    hostname: mongo
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data/db
      - configdb:/data/configdb
      - ./mongo/init:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: appdb
    networks:
      - mongo_db_net

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
    depends_on:
      - mongo
    networks:
      - mongo_db_net

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data

  mariadb:
    container_name: mariadb
    hostname: mariadb
    image: mariadb
    environment:
      # user: root
      MYSQL_ROOT_PASSWORD: mariapassword
      MYSQL_DATABASE: sampledb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_bin
      - --skip-character-set-client-handshake
    networks:
      - mariadbnet
    ports:
      - "3306:3306"
    volumes:
      - mariadb:/var/lib/mysql
    restart: always #unless-stopped

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8306:80"
    environment:
      PMA_HOST: mariadb
      PMA_VERBOSE: sampledb
      PMA_PORT: 3306
    depends_on:
      - mariadb
    networks:
      - mariadbnet

  postgres:
    restart: always
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=sampledb
    ports:
      - "5432:5432"
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "8432:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: example@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    depends_on:
      - postgres

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"


  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper

#  cli:
#    image: bitnami/kafka
#    hostname: cli
#    container_name: cli
#    depends_on:
#      - kafka
#    entrypoint: /bin/sh
#    tty: true



networks:
  mongo_db_net:
    driver: bridge
  mariadbnet:
    driver: bridge

volumes:
  mongo:
  configdb:
  pgadmin:
  mariadb:
  postgresql:
  postgresql_data:
  zookeeper_data:
  kafka_data:
