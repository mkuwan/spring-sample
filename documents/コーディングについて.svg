<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="751px" height="931px" viewBox="-0.5 -0.5 751 931" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2023-07-05T08:28:18.384Z&quot; agent=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.5.1 Chrome/112.0.5615.204 Electron/24.6.0 Safari/537.36&quot; etag=&quot;qDIywkdl3W_5oSR-nPag&quot; version=&quot;21.5.1&quot; type=&quot;device&quot; pages=&quot;4&quot;&gt;&#10;  &lt;diagram id=&quot;23iRSUPoRavnBvh4doch&quot; name=&quot;Page-1&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;1214&quot; dy=&quot;987&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;8ZhoyE12Psg8ZXVq8ZJW-2&quot; value=&quot;&amp;lt;h1&amp;gt;SOLID原則&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;320&quot; width=&quot;190&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;8ZhoyE12Psg8ZXVq8ZJW-3&quot; value=&quot;&amp;lt;h1&amp;gt;コードを書くとは&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;現在のコーディングではオブジェクト指向と呼ばれるコーディングが行われるが、現実的には、泥団子と呼ばれたり、スパゲッティコードと呼ばれるものが多い。&amp;lt;br&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;その原因はコーディングの際の原則や留意すべきことを考えず、ただひたすら動くだけのコードを書くことをしているから&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;コーディングの文法は昔からそれほど変わらない。しかしそうした汚いコード、メンテナンスのしにくいコードの反省からコーディングルールが生まれた。&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;それがコーディングにおける考え方、パターン、アーキテクチャです。つまりこう書いた方がバグが少なくなる、拡張性が保たれる、テストしやすくなる、というメリットから考案されたものたちです。&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;それらを学ぶことで自身のテクニック向上につながります。&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;40&quot; width=&quot;720&quot; height=&quot;200&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;8ZhoyE12Psg8ZXVq8ZJW-4&quot; value=&quot;&amp;lt;h1&amp;gt;デザインパターン&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;520&quot; width=&quot;280&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;8ZhoyE12Psg8ZXVq8ZJW-5&quot; value=&quot;&amp;lt;h1&amp;gt;イベント駆動設計&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;680&quot; width=&quot;280&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;8ZhoyE12Psg8ZXVq8ZJW-6&quot; value=&quot;&amp;lt;h1&amp;gt;ドメイン駆動設計&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;440&quot; y=&quot;680&quot; width=&quot;280&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;8ZhoyE12Psg8ZXVq8ZJW-7&quot; value=&quot;&amp;lt;h1&amp;gt;レイヤードアーキテクチャ&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;440&quot; y=&quot;520&quot; width=&quot;350&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;8ZhoyE12Psg8ZXVq8ZJW-8&quot; value=&quot;&amp;lt;h1&amp;gt;DRY&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;440&quot; y=&quot;320&quot; width=&quot;280&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;8ZhoyE12Psg8ZXVq8ZJW-9&quot; value=&quot;&amp;lt;h1&amp;gt;Atomic&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;840&quot; width=&quot;280&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;8ZhoyE12Psg8ZXVq8ZJW-10&quot; value=&quot;&amp;lt;h1&amp;gt;テスト駆動設計&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;440&quot; y=&quot;840&quot; width=&quot;280&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;  &lt;diagram id=&quot;hVMTptp6iDpyrVQRq9mV&quot; name=&quot;凝集度と結合度&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;1214&quot; dy=&quot;987&quot; grid=&quot;0&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-1&quot; value=&quot;&amp;lt;h1&amp;gt;凝集度&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;アプリケーションを構成するモジュールが、その責務ごとに集まっている状態&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;font color=&amp;quot;#0000ff&amp;quot; style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;凝集度は高いほど良いとされている : 高凝集&amp;lt;/font&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;凝集度の高いクラスは、他のクラスなどへの依存性が低く、保守性や再利用性に優れている&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;凝集度の低いクラスは、そのクラスが担っている責務が不明瞭になり、無関係な責務に利用されたりしてしまう&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;クラスを作成するときに、共通メソッドはできるだけ共通化するという教え方がされることがありますが、なんでもかんでも共通化すると、責務がわからなくなり、このメソッドが至る所で利用されるようになり、そのメソッドのコードに変更があると、影響範囲がとてつもなく広くなる。高凝集は良いことですが、責務を超えた高凝集はだめということ。&amp;lt;br&amp;gt;例えば、顧客テーブルを読み込むメソッドがあったとします。&amp;lt;br&amp;gt;このメソッドを利用する画面が管理画面と利用者画面の二つがあります。&amp;lt;br&amp;gt;そうするとCustomer getCustomerData(string id) のなかでIf文で呼び出し画面ごとの区分けをする必要が出てしまいます&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;60&quot; y=&quot;40&quot; width=&quot;710&quot; height=&quot;250&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-2&quot; value=&quot;顧客&quot; style=&quot;shape=umlActor;verticalLabelPosition=bottom;verticalAlign=top;html=1;outlineConnect=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;530&quot; y=&quot;320&quot; width=&quot;30&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-3&quot; value=&quot;管理者&quot; style=&quot;shape=umlActor;verticalLabelPosition=bottom;verticalAlign=top;html=1;outlineConnect=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;110&quot; y=&quot;320&quot; width=&quot;30&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-10&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;jbYZE0S0Y6yiC4pBRhsV-7&quot; target=&quot;jbYZE0S0Y6yiC4pBRhsV-9&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-7&quot; value=&quot;顧客管理画面&quot; style=&quot;label;whiteSpace=wrap;html=1;image=img/clipart/Gear_128x128.png&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;160&quot; y=&quot;330&quot; width=&quot;140&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-13&quot; style=&quot;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;jbYZE0S0Y6yiC4pBRhsV-8&quot; target=&quot;jbYZE0S0Y6yiC4pBRhsV-9&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-8&quot; value=&quot;利用者画面&quot; style=&quot;label;whiteSpace=wrap;html=1;image=img/clipart/Gear_128x128.png&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;570&quot; y=&quot;330&quot; width=&quot;140&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-9&quot; value=&quot;Customer getCustomerData(string id)&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;100&quot; y=&quot;490&quot; width=&quot;260&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-11&quot; value=&quot;1. 最初は管理者が顧客情報を管理するために作った&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;95&quot; y=&quot;555&quot; width=&quot;300&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-14&quot; value=&quot;2. 利用者画面からも利用できるようにしたい&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;460&quot; y=&quot;480&quot; width=&quot;260&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-17&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; parent=&quot;1&quot; source=&quot;jbYZE0S0Y6yiC4pBRhsV-15&quot; target=&quot;jbYZE0S0Y6yiC4pBRhsV-16&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-15&quot; value=&quot;3. 管理者画面開発で顧客管理画面で支払い遅延している顧客の場合、顧客名に(警告)がつくよう修正した&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;124&quot; y=&quot;600&quot; width=&quot;580&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-16&quot; value=&quot;利用者画面でも(警告)が表示されるようになってしまい、リリース後にクレームが来た&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontColor=#CC0000;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;169&quot; y=&quot;650&quot; width=&quot;490&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-18&quot; value=&quot;&amp;lt;h1&amp;gt;結合度&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;アプリケーションを構成するモジュールやクラスの依存関係の度合いを示す&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#0000ff&amp;quot; style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;結合度は低いほど良いとされている : 疎結合&amp;lt;/font&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;クラスAの中でクラスBを使用している場合、クラスBの変更があるとクラスBを使用している全てのクラスやメソッドに影響が出る&amp;lt;br&amp;gt;また、クラスBに修正が行われた結果、クラスBにバグが生じた場合、それを利用しているクラスAはコンパイルできなくなる&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;730&quot; width=&quot;710&quot; height=&quot;140&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-22&quot; value=&quot;ClassA&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;80&quot; y=&quot;910&quot; width=&quot;160&quot; height=&quot;130&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-23&quot; value=&quot;+ ClassB b&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;jbYZE0S0Y6yiC4pBRhsV-22&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;160&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-24&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;jbYZE0S0Y6yiC4pBRhsV-22&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;52&quot; width=&quot;160&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-25&quot; value=&quot;+ method() {&amp;lt;br&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;b = new ClassB();&amp;lt;br&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;int a = b.doMethod(10);&amp;lt;br&amp;gt;}&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;jbYZE0S0Y6yiC4pBRhsV-22&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;60&quot; width=&quot;160&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-26&quot; value=&quot;ClassB&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;380&quot; y=&quot;910&quot; width=&quot;160&quot; height=&quot;130&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-28&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;jbYZE0S0Y6yiC4pBRhsV-26&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;160&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-29&quot; value=&quot;+ doMethod(int num) {&amp;lt;br&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp;修正したらバグった💦&amp;lt;br&amp;gt;}&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;jbYZE0S0Y6yiC4pBRhsV-26&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;34&quot; width=&quot;160&quot; height=&quot;96&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;jbYZE0S0Y6yiC4pBRhsV-30&quot; style=&quot;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;endArrow=block;endFill=1;&quot; parent=&quot;1&quot; source=&quot;jbYZE0S0Y6yiC4pBRhsV-23&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;380&quot; y=&quot;949&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;5akI4LCmDeSlnDPPpAO7-1&quot; value=&quot;オブジェクト指向の特徴として継承や再利用があるが、関心や責務が分離されず、やみくもに行われると、&amp;lt;br style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;結果としてスパゲッティコードや泥団子の完成となります。&quot; style=&quot;text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#d6b656;fillColor=#fff2cc;fontSize=14;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;60&quot; y=&quot;1090&quot; width=&quot;690&quot; height=&quot;50&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;  &lt;diagram id=&quot;nUb2YIOp0cMXskgFpBwr&quot; name=&quot;SOLID&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;1214&quot; dy=&quot;987&quot; grid=&quot;0&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;n7u9YivRgViy3e6Xz8Mt-1&quot; value=&quot;&amp;lt;h1&amp;gt;SOLID原則 : ソフトウェアデザインの5つの原則&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;S : 単一責務 (single-responsibility&amp;amp;nbsp;principle)&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;O : 開放と閉鎖（open/closed&amp;amp;nbsp;principle）&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;L : リスコフの置換（Liskov substitution&amp;amp;nbsp;principle）&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;I : インターフェイス分離 (interface segregation&amp;amp;nbsp;principle)&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;D : 依存性逆転（dependency inversion&amp;amp;nbsp;principle）&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;40&quot; width=&quot;740&quot; height=&quot;180&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;fn9a_XEL65VADhuuKR3x-2&quot; value=&quot;&amp;lt;h1&amp;gt;S: 単一責務 (責務の分離)&amp;lt;/h1&amp;gt;&amp;lt;p style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;font color=&amp;quot;#0000ff&amp;quot; style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;クラスを変更する理由は常に１つでなければならない&amp;lt;/font&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 12px;&amp;quot;&amp;gt;肥大化したクラスの中を見ると、ありとあらゆるメソッドが混在し、クラスが様々な責務を負ってしまっている場合、それは単一責務の原則に違反したものとなっている。&amp;lt;/font&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;原因は&amp;lt;br&amp;gt;・寄せ集めの共有メソッドをまとめたクラス&amp;lt;br&amp;gt;・クラスの責務を理解せず、クラスを少なくしてしまおうという考え方&amp;lt;br&amp;gt;・機能分けが明確にできていないままに始まってしまった開発&amp;lt;br&amp;gt;　　　などなど色々ある&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;ただし、この原則は指針であるべきで絶対ではない。&amp;lt;br&amp;gt;極端に守ろうとすると、貧血クラス(プロパティしかない、メソッドが一つしかない)が出来上がってしまう&amp;lt;br&amp;gt;結果的にそれらを結合するクラスを作成することになり、巨大なクラスと貧血クラスというアンバランスな状態なってしまう&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;クラスをできるだけシンプルに保ち、そのクラスのコアとなる責務(タスク)に焦点を合わせて作成することが大切です&amp;lt;br&amp;gt;言い換えれば、このクラスは何をするクラスなのかが明確になっていることが大切ということです&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;280&quot; width=&quot;720&quot; height=&quot;300&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;szDrwZrApUq5CaRQYe_3-1&quot; value=&quot;&amp;lt;h1&amp;gt;O: 開放と閉鎖 (Open / Close)&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;font color=&amp;quot;#0000ff&amp;quot; style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;モジュールは拡張に対しては開いていなければならないが修正に対しては閉じていなければならない&amp;lt;/font&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;あるクラスやメソッドがあったとします&amp;lt;br&amp;gt;　その機能に関係した新しい機能を追加するときには、既存のコードをベースに追加ができるようになっていること&amp;lt;br&amp;gt;　オブジェクト指向における継承やOverride、インターフェース、ジェネリックの利用などがそれに該当します&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;　Closeとは、その機能を修正するときに既存コードを書き換えることによる影響度を最小限にするということ&amp;lt;br&amp;gt;　例えば、if文を追加して修正するのではなく、新しいクラスを作成して対応するなど&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;特にif文の追加で対応しているような修正があった場合は要注意&amp;lt;br&amp;gt;コードがどんどん汚くなり、いつしか誰も判読できないコードとなります&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;640&quot; width=&quot;740&quot; height=&quot;220&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-2&quot; value=&quot;&amp;lt;h1&amp;gt;L: リスコフの置換&amp;amp;nbsp;&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;font color=&amp;quot;#0000ff&amp;quot; style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;派生クラスをその基底クラスと置き換えることができなければならない&amp;lt;/font&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;野菜クラスという基底クラスがあったとします&amp;lt;br&amp;gt;派生クラスには大根クラス、にんじんクラス、玉ねぎクラスがあります&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;このとき基底クラスで、生産者は誰、生産地の都道府県、を表すメソッドがある&amp;lt;br&amp;gt;その場合、派生クラスの大根クラス・にんじんクラス・玉ねぎクラスのどのクラスでも同じメソッドが実装されていて、だれ・どこという情報が返されるべき&amp;lt;br&amp;gt;ところが、玉ねぎクラスだけは生産地を内部メソッドでさらに変換して、生産地が都道府県ではなく市町村を返していたら・・・&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;この場合は玉ねぎクラスはリスコフの置換の原則に違反していることになります&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;コード設計においては、基底クラスには契約(約束事)があるということです。&amp;lt;br&amp;gt;この契約に違反する派生クラスはだめってこと。&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;910&quot; width=&quot;740&quot; height=&quot;250&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-3&quot; value=&quot;&amp;lt;h1&amp;gt;I: インターフェイス分離&amp;amp;nbsp;&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;font color=&amp;quot;#0000ff&amp;quot; style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;汎用なインターフェースが一つあるよりも、各クライアントに特化したインターフェースがたくさんあった方がよい&amp;lt;/font&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;インターフェイスとはメソッドの定義が書かれた約束事ですが、扱い方に注意が必要です&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;クラスはその責務を実行するために様々なメソッドが実装されます。&amp;lt;br&amp;gt;このときインターフェイスを継承するわけですが、クラスに実装する全てのメソッドを一つのインターフェイスにまとめる必要はないということです&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;例えば注文クラスと配送クラスがあったとします。それぞれの責務は注文と配送です。&amp;lt;br&amp;gt;注文クラスでは顧客データから顧客名だけが必要です&amp;lt;br&amp;gt;配送クラスでは顧客データから顧客名と住所が必要となります&amp;lt;br&amp;gt;このとき、顧客インターフェイスを作成して、顧客名取得メソッドと住所取得メソッドの二つがあり、注文クラス、配送クラスそれぞれに継承させた場合、注文クラスでは不要なメソッドも実装しなければならないことになります。&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;1200&quot; width=&quot;740&quot; height=&quot;260&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-4&quot; value=&quot;注文クラス&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;320&quot; y=&quot;1480&quot; width=&quot;140&quot; height=&quot;78&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-5&quot; value=&quot;+ getCustomerName&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;b_cl77-zovkB4GotLsDa-4&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;140&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-6&quot; value=&quot;+ getCustomerAddress&quot; style=&quot;text;strokeColor=#b85450;fillColor=#f8cecc;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;b_cl77-zovkB4GotLsDa-4&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;52&quot; width=&quot;140&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-15&quot; style=&quot;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;endArrow=block;endFill=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;b_cl77-zovkB4GotLsDa-9&quot; target=&quot;b_cl77-zovkB4GotLsDa-13&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;240&quot; y=&quot;1540&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-8&quot; value=&quot;配送クラス&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;320&quot; y=&quot;1580&quot; width=&quot;140&quot; height=&quot;78&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-9&quot; value=&quot;+ getCustomerName&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;b_cl77-zovkB4GotLsDa-8&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;140&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-10&quot; value=&quot;+ getCustomerAddress&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;b_cl77-zovkB4GotLsDa-8&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;52&quot; width=&quot;140&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-11&quot; value=&quot;顧客インターフェイス&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;60&quot; y=&quot;1480&quot; width=&quot;160&quot; height=&quot;78&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-12&quot; value=&quot;+ getCustomerName&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;b_cl77-zovkB4GotLsDa-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;160&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-13&quot; value=&quot;+ getCustomerAddress&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;b_cl77-zovkB4GotLsDa-11&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;52&quot; width=&quot;160&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-14&quot; style=&quot;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=block;endFill=0;&quot; parent=&quot;1&quot; source=&quot;b_cl77-zovkB4GotLsDa-5&quot; target=&quot;b_cl77-zovkB4GotLsDa-12&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-20&quot; value=&quot;不要&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#d79b00;fillColor=#ffe6cc;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;510&quot; y=&quot;1528&quot; width=&quot;50&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-19&quot; style=&quot;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;endArrow=classic;endFill=1;exitX=0.02;exitY=0.583;exitDx=0;exitDy=0;exitPerimeter=0;&quot; parent=&quot;1&quot; source=&quot;b_cl77-zovkB4GotLsDa-20&quot; target=&quot;b_cl77-zovkB4GotLsDa-6&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;510&quot; y=&quot;1546.56694214876&quot; as=&quot;sourcePoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-33&quot; value=&quot;名前インターフェイス&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;60&quot; y=&quot;1700&quot; width=&quot;160&quot; height=&quot;52&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-34&quot; value=&quot;+ getCustomerName&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;b_cl77-zovkB4GotLsDa-33&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;160&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-36&quot; value=&quot;住所インターフェイス&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;60&quot; y=&quot;1806&quot; width=&quot;160&quot; height=&quot;52&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-37&quot; value=&quot;+ getCustomerAddress&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;b_cl77-zovkB4GotLsDa-36&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;160&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-38&quot; value=&quot;配送クラス&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;320&quot; y=&quot;1780&quot; width=&quot;140&quot; height=&quot;78&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxRectangle x=&quot;320&quot; y=&quot;1780&quot; width=&quot;94&quot; height=&quot;26&quot; as=&quot;alternateBounds&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-39&quot; value=&quot;+ getCustomerName&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;b_cl77-zovkB4GotLsDa-38&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;140&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-40&quot; value=&quot;+ getCustomerAddress&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;b_cl77-zovkB4GotLsDa-38&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;52&quot; width=&quot;140&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-41&quot; value=&quot;注文クラス&quot; style=&quot;swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;320&quot; y=&quot;1700&quot; width=&quot;140&quot; height=&quot;52&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-42&quot; value=&quot;+ getCustomerName&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;b_cl77-zovkB4GotLsDa-41&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry y=&quot;26&quot; width=&quot;140&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-45&quot; style=&quot;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; parent=&quot;1&quot; source=&quot;b_cl77-zovkB4GotLsDa-42&quot; target=&quot;b_cl77-zovkB4GotLsDa-34&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-46&quot; style=&quot;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1.006;entryY=0.942;entryDx=0;entryDy=0;entryPerimeter=0;endArrow=block;endFill=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;&quot; parent=&quot;1&quot; source=&quot;b_cl77-zovkB4GotLsDa-39&quot; target=&quot;b_cl77-zovkB4GotLsDa-34&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-47&quot; style=&quot;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;endArrow=block;endFill=0;&quot; parent=&quot;1&quot; source=&quot;b_cl77-zovkB4GotLsDa-40&quot; target=&quot;b_cl77-zovkB4GotLsDa-37&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-48&quot; value=&quot;このようにインターフェイスを分離することで&amp;lt;br&amp;gt;必要なもののみ実装させる&quot; style=&quot;text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;480&quot; y=&quot;1818&quot; width=&quot;270&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-49&quot; value=&quot;&amp;lt;h1&amp;gt;D: 依存性逆転&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;lt;font color=&amp;quot;#0000ff&amp;quot; style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;上位モジュールを下位モジュールに依存させるのではなく、両方とも抽象化に依存させるべき&amp;lt;/font&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;クラス内であるサービスクラスを利用する際、サービスクラスをnewして使うのではなく、全てインターフェイスによってその実装を行うということ&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;言葉だと分かりにくいですが、メソッドを作成する際、それがpublicメソッドである場合は、それをインターフェイスとして抽象化し、そのインターフェイスに対するコードティングを行います。&amp;lt;br&amp;gt;この考え方が、DI (Dependency Injection) : 依存性注入と呼ばれるパターンの根拠となっています。&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;このようにインターフェイスを使用することで、実装を分けることができます。&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;またインターフェイスによって具象クラスが分離されることで、Mockなどの利用でテスト容易性が向上し、特にこれが現在では依存性逆転のメリットとされています。&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;1940&quot; width=&quot;740&quot; height=&quot;380&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-50&quot; value=&quot;&amp;lt;p style=&amp;quot;border-color: var(--border-color); text-align: left;&amp;quot;&amp;gt;IReader readerA = new ReaderA();&amp;lt;br style=&amp;quot;border-color: var(--border-color);&amp;quot;&amp;gt;IWriter writeA = new WriterA();&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;border-color: var(--border-color); text-align: left;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;void CopyA(){&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; Byte byte;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; while(byte = readerA.Read())&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; writerA.Write(byte)&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;}&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;93&quot; y=&quot;2106&quot; width=&quot;204&quot; height=&quot;149&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;b_cl77-zovkB4GotLsDa-54&quot; value=&quot;&amp;lt;p style=&amp;quot;border-color: var(--border-color); text-align: left;&amp;quot;&amp;gt;IReader readerB = new ReaderB();&amp;lt;br style=&amp;quot;border-color: var(--border-color);&amp;quot;&amp;gt;IWriter writeB = new WriterB();&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;border-color: var(--border-color); text-align: left;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;void CopyB(){&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; Byte byte;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; while(byte = readerB.Read())&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;&amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; &amp;amp;nbsp; writerB.Write(byte)&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;}&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;333&quot; y=&quot;2106&quot; width=&quot;204&quot; height=&quot;149&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;  &lt;diagram id=&quot;QQ7BRVVWf2yj2QaJGO71&quot; name=&quot;バッチ処理&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;741&quot; dy=&quot;987&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;jGWuxOeDkE_CTIc3gnrj-1&quot; value=&quot;&amp;lt;h1&amp;gt;バッチ(Batch)とは&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&amp;lt;/p&amp;gt;&quot; style=&quot;text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;40&quot; width=&quot;720&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;"><defs/><g><rect x="0" y="290" width="190" height="120" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 182px; height: 1px; padding-top: 280px; margin-left: 5px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 130px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><h1>SOLID原則</h1><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p></div></div></div></foreignObject><text x="5" y="292" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">SOLID原則...</text></switch></g><rect x="0" y="10" width="720" height="200" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 712px; height: 1px; padding-top: 0px; margin-left: 5px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 210px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><h1>コードを書くとは</h1><p>現在のコーディングではオブジェクト指向と呼ばれるコーディングが行われるが、現実的には、泥団子と呼ばれたり、スパゲッティコードと呼ばれるものが多い。<br /><span style="background-color: initial;">その原因はコーディングの際の原則や留意すべきことを考えず、ただひたすら動くだけのコードを書くことをしているから<br /></span><span style="background-color: initial;">コーディングの文法は昔からそれほど変わらない。しかしそうした汚いコード、メンテナンスのしにくいコードの反省からコーディングルールが生まれた。<br /></span><span style="background-color: initial;">それがコーディングにおける考え方、パターン、アーキテクチャです。つまりこう書いた方がバグが少なくなる、拡張性が保たれる、テストしやすくなる、というメリットから考案されたものたちです。<br /></span><span style="background-color: initial;">それらを学ぶことで自身のテクニック向上につながります。</span></p></div></div></div></foreignObject><text x="5" y="12" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">コードを書くとは現在のコーディングではオブジェクト指向と呼ばれるコーディングが行われるが、現実的には、泥団子と呼ばれたり、スパゲッティコードと呼ばれるものが多い。その原因はコーディングの際の原則や留意すべきことを考えず、ただひたすら動くだけのコードを書くことをしているからコーディングの文法は昔からそれほど変わらない。しかしそうした汚いコード、メンテナンスのしにくいコードの反省からコーディングルールが生まれた。それがコーディングにおける考え方、パターン、アーキテクチャです。つまりこう書いた方がバグが少なくなる、拡張性が保たれる、テストしやすくなる、というメリットから考案されたものたちです。それらを学ぶことで自身のテクニック向上につながります。...</text></switch></g><rect x="0" y="490" width="280" height="120" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 272px; height: 1px; padding-top: 480px; margin-left: 5px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 130px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><h1>デザインパターン</h1><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p></div></div></div></foreignObject><text x="5" y="492" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">デザインパターンLorem ipsum dolor sit amet, consectetur adipi...</text></switch></g><rect x="0" y="650" width="280" height="120" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 272px; height: 1px; padding-top: 640px; margin-left: 5px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 130px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><h1>イベント駆動設計</h1><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p></div></div></div></foreignObject><text x="5" y="652" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">イベント駆動設計Lorem ipsum dolor sit amet, consectetur adipi...</text></switch></g><rect x="400" y="650" width="280" height="120" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 272px; height: 1px; padding-top: 640px; margin-left: 405px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 130px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><h1>ドメイン駆動設計</h1><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p></div></div></div></foreignObject><text x="405" y="652" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">ドメイン駆動設計Lorem ipsum dolor sit amet, consectetur adipi...</text></switch></g><rect x="400" y="490" width="350" height="120" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 342px; height: 1px; padding-top: 480px; margin-left: 405px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 130px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><h1>レイヤードアーキテクチャ</h1><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p></div></div></div></foreignObject><text x="405" y="492" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">レイヤードアーキテクチャLorem ipsum dolor sit amet, consectetur adipisicing elit,...</text></switch></g><rect x="400" y="290" width="280" height="120" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 272px; height: 1px; padding-top: 280px; margin-left: 405px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 130px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><h1>DRY</h1><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p></div></div></div></foreignObject><text x="405" y="292" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">DRY...</text></switch></g><rect x="0" y="810" width="280" height="120" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 272px; height: 1px; padding-top: 800px; margin-left: 5px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 130px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><h1>Atomic</h1><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p></div></div></div></foreignObject><text x="5" y="812" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Atomic...</text></switch></g><rect x="400" y="810" width="280" height="120" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 272px; height: 1px; padding-top: 800px; margin-left: 405px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; max-height: 130px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><h1>テスト駆動設計</h1><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p></div></div></div></foreignObject><text x="405" y="812" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">テスト駆動設計Lorem ipsum dolor sit amet, consectetur adipi...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>